package miniproject;
import java.util.Scanner;

class Student {
    private int id;
    private String name;

    public Student(int id, String name) {
        this.id = id;
        this.name = name;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }
}

class Course {
    private int courseId;
    private String courseName;
    private Student[] students;
    private int studentCount;

    public Course(int courseId, String courseName, int maxStudents) {
        this.courseId = courseId;
        this.courseName = courseName;
        this.students = new Student[maxStudents];
        this.studentCount = 0;
    }

    public int getCourseId() {
        return courseId;
    }

    public String getCourseName() {
        return courseName;
    }

    public void enrollStudent(Student student) {
        if (studentCount < students.length) {
            students[studentCount] = student;
            studentCount++;
            System.out.println(student.getName() + " has been enrolled in " + courseName);
        } else {
            System.out.println("Course " + courseName + " is full. Cannot enroll " + student.getName());
        }
    }

    public void displayRoster() {
        System.out.println("Roster for " + courseName + ":");
        for (int i = 0; i < studentCount; i++) {
            System.out.println(students[i].getId() + " - " + students[i].getName());
        }
    }
}

public class SchoolManagementSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the maximum number of students a course can have: ");
        int maxStudents = scanner.nextInt();
        scanner.nextLine(); 

        Course[] courses = new Course[3]; 

        courses[0] = new Course(1, "BioMaths ", maxStudents);
        courses[1] = new Course(2, "ComputerScience", maxStudents);
        courses[2] = new Course(3, "Accountancy ", maxStudents);

        while (true) {
            System.out.println("ST Higher Secondary School ");
            System.out.println("------*****************-----!!");
            System.out.println("1. Enroll Student in Course");
            System.out.println("2. View Course Roster");
            System.out.println("3. Exit---***");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    System.out.print("Enter student ID: ");
                    int studentId = scanner.nextInt();
                    scanner.nextLine(); 
                    System.out.print("Enter student name: ");
                    String studentName = scanner.nextLine();
                    Student student = new Student(studentId, studentName);

                    System.out.println("Available Courses:");
                    for (Course course : courses) {
                        System.out.println(course.getCourseId() + " - " + course.getCourseName());
                    }

                    System.out.print("Enter the course ID to enroll the student: ");
                    int courseId = scanner.nextInt();
                    Course selectedCourse = null;
                    for (Course course : courses) {
                        if (course.getCourseId() == courseId) {
                            selectedCourse = course;
                            break;
                        }
                    }

                    if (selectedCourse != null) {
                        selectedCourse.enrollStudent(student);
                    } else {
                        System.out.println("Invalid course ID. Student not enrolled.");
                    }
                    break;

                case 2:
                    System.out.println("Available Courses:");
                    for (Course course : courses) {
                        System.out.println(course.getCourseId() + " - " + course.getCourseName());
                    }

                    System.out.print("Enter the course ID to view the roster: ");
                    courseId = scanner.nextInt();
                    selectedCourse = null;
                    for (Course course : courses) {
                        if (course.getCourseId() == courseId) {
                            selectedCourse = course;
                            break;
                        }
                    }

                    if (selectedCourse != null) {
                        selectedCourse.displayRoster();
                    } else {
                        System.out.println("Invalid course ID.");
                    }
                    break;

                case 3:
                    System.out.println("Exiting School Management System.");
                    scanner.close();
                    System.exit(0);
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}